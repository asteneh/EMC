@using CNET_ERP_V7.Models.Security;
@using CNET_V7_Domain.Domain.CommonSchema;
@using Newtonsoft.Json;
@model systemSettingModel

@inject CNET_ERP_V7.Common.Company.SharedHelpers sharedHelpers
@{
    List<string> DateList = new List<string>();

    DateList.Add("Monday");
    DateList.Add("Tuesday");
    DateList.Add("Wednesday");
    DateList.Add("Thursday");
    DateList.Add("Friday");
    DateList.Add("Saturday");
    DateList.Add("Sunday");
    List<CompanySchedule> sdfsd = new List<CompanySchedule>
             {
                       new CompanySchedule {days ="Monday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Tuesday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Wednesday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Thursday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Friday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Saturday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                       new CompanySchedule {days ="Sunday",fromtime = DateTime.Now.Date , totime = DateTime.Now.Date.AddHours(23),hours = 24},
                     };
    
    ScheduleDTO? companyworkschedule = new ScheduleDTO();
    if (Model?.consineeCode != null && Model?.consineeCode > 0)
    {
        companyworkschedule = await sharedHelpers.GetScheduleByReference(Model?.consineeCode);
    }
        var scheduleTypesList = "";
    var scheduleTypescode = 0;
    var Scheduleheaderlist = await sharedHelpers.GetLookUpByType("Schedule Header");

    if (Scheduleheaderlist != null && Scheduleheaderlist.Count > 0)
    {
        var OpenScheduleheader = Scheduleheaderlist.FirstOrDefault(x => x.Description == "Open Hour");
        if (OpenScheduleheader != null)
        {
            scheduleTypesList = OpenScheduleheader.Description;
            scheduleTypescode = OpenScheduleheader.Id;
        }
        else
        {
            scheduleTypesList = Scheduleheaderlist.FirstOrDefault().Description;
            scheduleTypescode = Scheduleheaderlist.FirstOrDefault().Id;
        }
    }
  var GetScheduleDetails = await sharedHelpers.GetScheduleDetailsByRefAndType(companyworkschedule?.Reference, "1839");

    if (GetScheduleDetails != null && GetScheduleDetails.Count() > 0)
    {
        foreach (CompanySchedule sche in sdfsd)
        {
            var lll = GetScheduleDetails.FirstOrDefault(x => x.DayMonth == sche.days);
            if (lll != null)
            {
                sche.headercode = lll.Id;
                sche.detailcode = lll.Seheduleheader;
                sche.fromtime = Convert.ToDateTime(lll.StartTime);
                sche.totime = Convert.ToDateTime(lll.EndTime);
                sche.hours = (sche.totime - sche.fromtime).Hours;
            }
        }

    }
    List<ScheduleHeaderDTO> ScheduleHeader = new List<ScheduleHeaderDTO>();

    if (companyworkschedule != null)
    {
        ScheduleHeader = await sharedHelpers.SelectScheduleHeaderById(companyworkschedule?.ScheduledHeader);

    }
    var description = ScheduleHeader?.FirstOrDefault()?.Description;
    var scheduleheadercode = ScheduleHeader?.FirstOrDefault()?.Id;
    var startdate = ScheduleHeader?.FirstOrDefault()?.StartDate.ToString("yyyy-MM-dd");
    var enddate = ScheduleHeader?.FirstOrDefault()?.EndDate.ToString("yyyy-MM-dd");
    var todate = DateTime.Now.Date.ToString("yyyy-MM-dd");

    decimal Totalhour = 0;
  
}


<style type="text/css">
    .sptable {
        border: 1px solid #ccc;
        border-collapse: collapse;
        background-color: #fff;
        width: 100%;
    }

        .sptable .asth {
            background-color: cornflowerblue !important;
            color: #fff;
            font-weight: bold;
        }

        .sptable th, table td {
            padding: 1px;
            border: 1px solid #ccc;
        }

        .sptable, .sptable .sptable td {
            border: 0px solid #ccc;
        }

            .sptable [type=text], select {
                width: 100%;
            }

    .identificatinn {
        height: 25vh;
    }
</style>

<div class="box box-primary">
    <div class="box-body">
        <div class="form-group form-group-sm">

            <input asp-for="schedule_typecode" value="@scheduleTypescode" hidden />
            <input asp-for="scheduleheadercode" value="@scheduleheadercode" hidden />
            <label class="col-md-3 control-label">Schedule Dscription</label>
            <div class="col-md-9">
                @if (!string.IsNullOrEmpty(@description))
                {
                    <input asp-for="schedule_description" value="@description" class="form-control" />
                }
                else
                {
                    <input asp-for="schedule_description" class="form-control" value="" />
                }
            </div><br /><br />

            <label class="col-md-3 control-label">Schedule Type</label>
            <div class="col-md-9">

                <input asp-for="schedule_type" value="@scheduleTypesList" class="form-control" readonly /> <span asp-validation-for="schedule_type"></span>

            </div><br /><br />

            <label class="col-md-3 control-label">Schedule From Date</label>
            <div class="col-md-9">
                @if (!string.IsNullOrEmpty(startdate?.ToString()))
                {
                    <input asp-for="schedule_from_date" type="date" class="form-control" value="@startdate">
                    <span asp-validation-for="schedule_from_date"></span>

                }
                else
                {
                    <input asp-for="schedule_from_date" type="date" class="form-control" value="@todate">
                    <span asp-validation-for="schedule_from_date"></span>

                }

            </div><br /><br />

            <label class="col-md-3 control-label">Schedule To Date</label>
            <div class="col-md-9">
                @if (!string.IsNullOrEmpty(enddate?.ToString()))
                {
                    <input asp-for="schedule_to_date" type="date" class="form-control" value="@enddate">
                    <span asp-validation-for="schedule_to_date"></span>
                }
                else
                {
                    <input asp-for="schedule_to_date" type="date" class="form-control" value="@todate">
                    <span asp-validation-for="schedule_to_date"></span>
                }
            </div>
            <br /><br />
        </div>

        <table cellpadding="0" cellspacing="0" class="sptable">
            <tr class="asth">
                <td>Days</td>
                <td>From Time</td>
                <td>To Time</td>
                <td>Hour</td>
            </tr>

            @if (companyworkschedule == null)
            {
                @foreach (var item in sdfsd)
                {
                    Totalhour = item.hours * 7;
                    <input value="@item.days" class="form-control" type="hidden" asp-for="daymonth" />



                    <tr data-value="" class="addressrow">

                        <td>@item.days</td>

                        <td>
                            <a data-toggle="tab" data-value="" data-types="" style="text-decoration-line:none!important;" name="catagory" id="" class="">

                                <input class="form-control" name="startdaet[]" value="@item.fromtime.ToString("HH:mm:ss")" type="time" step="1" style="height:25px;" />
                            </a>


                        </td>
                        <td>

                            <a data-toggle="tab" data-value="" data-types="" style="text-decoration-line:none!important;" name="catagory" id="" class="">

                                <input class="form-control" name="enddate[]" value="@item.totime.ToString("HH:mm:ss")" type="time" step="1" style="height:25px;" />
                            </a>

                        </td>

                        <td>@item.hours</td>
                    </tr>

                }
            }
            else
            { @foreach (var item in sdfsd)
                {
                    <input value="@item.headercode" class="form-control" type="hidden" asp-for="headercodee" />
                    if (item?.detailcode >0)
                    {
                        <input value="" class="form-control" type="hidden" asp-for="detailcodee" />
                    }
                    else
                    {
                        <input value="@item.detailcode" class="form-control" type="hidden" asp-for="detailcodee" />
                    }
                    <input value="@item.days" class="form-control" type="hidden" asp-for="daymonth" />


                    Totalhour = (item.hours + Totalhour);
                    <tr>
                        <td>@item.days</td>
                        @if (true)
                        {

                        }
                        <td>
                            <a data-toggle="tab" data-value="" data-types="" style="text-decoration-line:none!important;" name="catagory" id="" class="">

                                <input class="form-control" name="startdaet[]" value="@item.fromtime.ToString("HH:mm:ss")" type="time" step="1" style="height:25px;" />
                            </a>
                        </td>
                        <td>

                            <a data-toggle="tab" data-value="" data-types="" style="text-decoration-line:none!important;" name="catagory" id="" class="">

                                <input class="form-control" name="enddate[]" value="@item.totime.ToString("HH:mm:ss")" type="time" step="1" style="height:25px;" />
                            </a>
                        </td>
                        <td>@item.hours</td>

                    </tr>
                }
        }

        </table>

        <h5 style="float:right">Weekly Hour Total: @Totalhour@(".00")</h5>

    </div>
</div>