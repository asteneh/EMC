@using CNET_ERP_V7.Models.SubSytsemModel;
@using CNET_V7_Domain;
@using Newtonsoft.Json;
@model Devicemodel

@inject CNET_ERP_V7.Common.Company.SharedHelpers sharedHelpers
@{

    var codemodel = Model.DeviceType;
    int sysoldvalue = 1212121212;

    var deviceConfig = await sharedHelpers.GetConfigurationByRefandPref(Model?.deviceId.ToString(), CNETConstants.DEVICE);
}
<style>
    .sptablecontent {
        border-collapse: collapse;
        background-color: #fff;
        width: 98%;
        margin-left: 15px;
    }

        .sptablecontent .asth {
            font-weight: bold;
        }

        .sptablecontent th, table td {
            padding: 1px;
            border: 1px solid #ccc;
        }

        .sptablecontent th, table tr {
            height: 3px;
        }

        .sptablecontent, .sptablecontent .sptablecontent td {
            border: 0px solid #ccc;
        }

            .sptablecontent [type=text], select {
                width: 100%;
            }

            .sptablecontent [type=password] {
                width: 100%;
            }

            .sptablecontent div {
                width: 97%;
            }


    .Inputborder:focus {
        border: 1px solid #1670BE;
        box-shadow: 0 0 3px #1670BE;
        outline-offset: 0px;
        outline: none;
    }

    .Inputborder {
        border: 1px solid #eee;
        font-size: 13px !important;
        height: 17px !important;
        line-height: 2px !important;
        text-emphasis-position: initial !important;
        margin-top: 0px !important;
        padding: 0px 0px !important;
    }


    .mainparent {
        color: dodgerblue;
        background-color: #eee;
    }

    .boderclr {
        background-color: dodgerblue;
    }

    .vouproperty {
        height: 95vh;
        overflow-y: scroll;
    }

    #logstyle {
        position: absolute;
        background-color: #eee;
    }
    .TransportationTable {
        overflow-y: auto; /* make the table scrollable if height is more than 200 px  */
        height: 100%; /* gives an initial height of 200px to the table */
    }

        .TransportationTable thead th {
            position: sticky; /* make the table heads sticky */
            top: 0px; /* table head will be placed from the top of the table and sticks to it */
        }

    table {
        border-collapse: collapse; /* make the table borders collapse to each other */
        width: 100%;
    }

    th,
    td {
        padding: 0px 0px;
        border: 1px solid #ccc;
    }
</style>

<div class="box box-primary">

    <div class="box-header with-border">
        <div class="row">
            <div class="col-md-11">
                <div class="row">
                    <div class="form-group form-group-sm">
                        <label class="col-md-1 control-labell"> Find</label>
                        <div class="col-md-9">
                            <input type="text" id="filtrTransportsSetting" style="display:flex;width:100%;" class="form-control" placeholder="Search By Name">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="box-body vouproperty TransportationTable">
        @foreach (var va in deviceConfig)
        {
            switch (va.Attribute)
            {
                case "Beneficiary User":
                    Model.trans_BeneficiaryUser =
                    (enBeneficiaryUser)
                    Enum.Parse(typeof(enBeneficiaryUser), va.CurrentValue, false);
                    break;
                case "Need Credentials For Customer Discount":
                    Model.trans_NeedCredentialsForCustomerDiscount = (enNeedCredentials)Enum.Parse(typeof(enNeedCredentials), va.CurrentValue,false);
                    break;

                case "POS Value Rule":
                    Model.trans_POSValueRule =
                    (enValueRule)
                    Enum.Parse(typeof(enValueRule), va.CurrentValue, false);
                    break;

                case "Device Status API URL":
                    Model.trans_DeviceStatusAPIURL = va.CurrentValue;
                    break;
                case "Cinema Station Type":
                    Model.trans_CinemaStationType =
                    (enCinemaStationType)
                    Enum.Parse(typeof(enCinemaStationType), va.CurrentValue, false);
                    break;
                case "POS Use Only Available Article":
                    Model.trans_POSUseOnlyAvailableArticle = (enrecuIgnorezeroprice_rticle)Enum.Parse(typeof(enrecuIgnorezeroprice_rticle), va.CurrentValue,false);
                    break;
                case "API Base URL":
                    Model.trans_API_Base_UR = va.CurrentValue;
                    break;
                case "Ignore zero price article":
                    Model.trans_ignorezeropricearticle = va.CurrentValue;
                    break;
                case "Enable Online Payment":
                    Model.trans_EnableOnlinePayment = (enrecuIgnorezeroprice_rticle)Enum.Parse(typeof(enrecuIgnorezeroprice_rticle), va.CurrentValue, false);
                    break;
                case "QR Code Destination":
                    Model.trans_QRCodeDestination =
                    (enQRCodeDestination)
                    Enum.Parse(typeof(enQRCodeDestination), va.CurrentValue, false);
                    break;
                case "Print Discount & Additional Charge Per LineItem":
                    Model.trans_PrintDiscountAdditionalChargePerLineItem = va.CurrentValue;
                    break;
                case "Select Automatic Shift Period":
                    Model.trans_SelectAutomaticShiftPeriod = va.CurrentValue;
                    break;
                case "Timeout In Seconds":
                  if (!string.IsNullOrEmpty(va.CurrentValue))
                    {
                        Model.trans_TimeoutInSeconds = Convert.ToInt32(va.CurrentValue);
                    }
                    break;
                case "Enable Order":
                    Model.trans_EnableOrder = va.CurrentValue;
                    break;
                case "Remove Outdated Schedule":
                    Model.trans_RemoveOutdatedSchedule = va.CurrentValue;
                    break;
                case "Enable Item POS":
                    Model.trans_EnableItemPOS = va.CurrentValue;
                    break;
                case "Order Station Mandatory":
                    Model.trans_OrderStationMandatory = va.CurrentValue;
                    break;
                case "Enable Mobile Payment":
                    Model.trans_EnableMobilePayment = va.CurrentValue;
                    break;
                case "Enable Cash Payment":
                    Model.trans_EnableCashPayment = va.CurrentValue;
                    break;

                case "Log Path":
                    Model.trans_LogPath = va.CurrentValue;
                    break; 
                case "Capture Fiscal Information":
                    Model.trans_CaptureFiscalInformation = va.CurrentValue;
                    break;

                case "Saving Order":
                    Model.trans_SavingOrder = va.CurrentValue;
                    break;
                case "POS Trigger Article Removal":
                    Model.trans_POSTriggerArticleRemoval =  va.CurrentValue;
                    break;
                case "Need Credentials For Removal":
                    Model.trans_NeedCredentialsForRemoval =  va.CurrentValue;
                    break;

                case "Closing Frequency":
                    Model.trans_ClosingFrequency =  va.CurrentValue;
                    break;
                case "Accuracy Tolerance":
                    if (!string.IsNullOrEmpty(va.CurrentValue))
                    {
                        Model.trans_AccuracyTolerance = float.Parse(va.CurrentValue);
                    }
                    break;
                case "Summary Difference Tolerance":
                    if (!string.IsNullOrEmpty(va.CurrentValue))
                    {
                        Model.trans_SummaryDifferenceTolerance = float.Parse(va.CurrentValue);
                    }
                    break;
                case "Check Voucher Integrity":
                    Model.trans_CheckVoucherIntegrity = va.CurrentValue;
                    break;
                case "Fiscal Reconciliation":
                    Model.trans_FiscalReconciliation = va.CurrentValue;
                    break;
                case "Zeroing Voucher":
                    Model.trans_ZeroingVoucher = va.CurrentValue;
                    break;
                case "XML Reconciliation":
                    Model.trans_XMLReconciliation = va.CurrentValue;
                    break;
                case "Summary Voucher":
                    Model.trans_SummaryVoucher = va.CurrentValue;
                    break;
                case "DownLoad EJ":
                    Model.trans_DownLoadEJ = va.CurrentValue;
                    break;
                case "Flexible Quantity":
                    Model.trans_FlexibleQuantity = va.CurrentValue;
                    break;
                case "POS Store":
                    Model.trans_POSStore = "";

                    break;
            }
        }
        <form id="PropertyFormDataForTransport" method="post">
            <table cellpadding="0" cellspacing="0" class="sptablecontent tree-loadtrans" id="Transport_setting_table">
                <tr class="asth">
                    <td></td>
                    <td></td>
                </tr>
                <tr class="treegrid-@sysoldvalue mainparent">
                    <td colspan="2">
                        Transportation Pos Setting
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Capture Fiscal Information
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_CaptureFiscalInformation" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        POS Value Rule
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_POSValueRule" asp-items="Html.GetEnumSelectList<enValueRule>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Beneficiary User
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_BeneficiaryUser" asp-items="Html.GetEnumSelectList<enBeneficiaryUser>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Need Credentials For Customer Discount
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_NeedCredentialsForCustomerDiscount" asp-items="Html.GetEnumSelectList<enNeedCredentials>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Ignore zero price article
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_ignorezeropricearticle" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        POS Use Only Available Article
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_POSUseOnlyAvailableArticle" asp-items="Html.GetEnumSelectList<enrecuIgnorezeroprice_rticle>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Enable Online Payment
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_EnableOnlinePayment" asp-items="Html.GetEnumSelectList<enrecuIgnorezeroprice_rticle>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        API Base URL
                    </td>
                    <td class="attributcurrvalue">
                        <input asp-for="trans_API_Base_UR" type="text" value="@Model.trans_API_Base_UR" class="Inputborder" />
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Enable Cash Payment
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_EnableCashPayment" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>

                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Enable Item POS
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_EnableItemPOS" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Enable Mobile Payment
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_EnableMobilePayment" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Enable Order
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_EnableOrder" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">

                        Flexible Quantity
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_FlexibleQuantity" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Log Path
                    </td>
                    <td class="attributcurrvalue">
                        <div class="input-group">
                            @if (string.IsNullOrEmpty(Model.trans_LogPath))
                            {
                                <input asp-for="trans_LogPath" id="display_log_path_file" value="" class="Inputborder">
                                <label for="log_path_file" id="logstyle">...</label>

                            }
                            else
                            {
                                <input asp-for="trans_LogPath" id="display_log_path_file" value="@Model.trans_LogPath" class="Inputborder">
                                <label for="log_path_file" id="logstyle">...</label>

                            }
                        </div>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Device Status API URL
                    </td>
                    <td class="attributcurrvalue">
                        <div class="input-group">
                            @if (string.IsNullOrEmpty(Model.trans_DeviceStatusAPIURL))
                            {
                                <input asp-for="trans_DeviceStatusAPIURL"  value="" class="Inputborder">
                            }
                            else
                            {
                                <input asp-for="trans_DeviceStatusAPIURL"  value="@Model.trans_DeviceStatusAPIURL" class="Inputborder">
                            }
                        </div>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Need Credentials For Removal
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_NeedCredentialsForRemoval" asp-items="Model.need_Credentials_For_Removalsaccesses" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Cinema Station Type
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_CinemaStationType" asp-items="Html.GetEnumSelectList<enCinemaStationType>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr> 
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        QR Code Destination
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_QRCodeDestination" asp-items="Html.GetEnumSelectList<enQRCodeDestination>()" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>

                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Order Station Mandatory
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_OrderStationMandatory" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        POS Store
                    </td>
                    <td class="attributcurrvalue" data-toggle="modal" data-id="1" data-target="#PosStorebtnsaveMap">
                        @if (string.IsNullOrEmpty(Model.trans_POSStore))
                        {
                            <input asp-for="trans_POSStore" type="text" value="" id="pos_store_valueTras" class="Inputborder" readonly="readonly" />

                        }
                        else
                        {
                            <input asp-for="trans_POSStore" type="text" value="@Model.trans_POSStore" id="pos_store_valueTras" class="Inputborder" readonly="readonly" />

                        }
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        POS Trigger Article Removal
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_POSTriggerArticleRemoval" asp-items="Model.pOS_Trigger_Article_Removalsaracceses" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Remove Outdated Schedule
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_RemoveOutdatedSchedule" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Saving Order
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_SavingOrder" asp-items="Model.cinemaSavingOrder" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Select Automatic Shift Period
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_SelectAutomaticShiftPeriod" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        TimeOut In Seconds
                    </td>
                    <td class="attributcurrvalue">
                        @if (Model.trans_TimeoutInSeconds == 0)
                        {
                            <input asp-for="trans_TimeoutInSeconds" type="text" value="1" id="access_ControlDevice_Value" class="Inputborder Timeoutinput" />

                        }
                        else
                        {
                            <input asp-for="trans_TimeoutInSeconds" type="text" value="@Model.trans_TimeoutInSeconds" id="access_ControlDevice_Value" class="Inputborder Timeoutinput" />

                        }

                    </td>
                </tr>
                @{sysoldvalue = sysoldvalue + 1;}

                <tr class="treegrid-@sysoldvalue mainparent">
                    <td colspan="2">
                        Closing Setting
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Accuracy Tolerance
                    </td>
                    <td class="attributcurrvalue">
                        @if (Model.trans_AccuracyTolerance == 0)
                        {
                            <input asp-for="trans_AccuracyTolerance" value="0" class="Inputborder accurancyinput" maxlength="10" />

                        }
                        else
                        {
                            <input asp-for="trans_AccuracyTolerance" value="@Model.trans_AccuracyTolerance" class="Inputborder accurancyinput" maxlength="10" />

                        }

                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Check Voucher Integrity
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_CheckVoucherIntegrity" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Closing Frequency
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_ClosingFrequency" asp-items="Model.closing_frequencys" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        DownLoad EJ
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_DownLoadEJ" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        FiscalReconciliation
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_FiscalReconciliation" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Summary Difference Tolerance
                    </td>
                    <td class="attributcurrvalue">
                        @if (Model.trans_SummaryDifferenceTolerance == 0)
                        {
                            <input asp-for="trans_SummaryDifferenceTolerance" value="@Model.trans_SummaryDifferenceTolerance" maxlength="10" class="Inputborder summerydefinput" />

                        }
                        else
                        {

                            <input asp-for="trans_SummaryDifferenceTolerance" value="@Model.trans_SummaryDifferenceTolerance" maxlength="10" class="Inputborder summerydefinput" />
                        }
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Summary Voucher
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_SummaryVoucher" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        XML Reconciliation
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_XMLReconciliation" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Zeroing Voucher
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_ZeroingVoucher" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
                @{sysoldvalue = sysoldvalue + 1;}

                <tr class="treegrid-@sysoldvalue mainparent">
                    <td colspan="2">
                        PoS Component Setting
                    </td>
                </tr>
                <tr class="treegrid-parent-@sysoldvalue">
                    <td class="attributdata">
                        Print Discount & Additional Charge Per LineItem
                    </td>
                    <td class="attributcurrvalue">
                        <select asp-for="trans_PrintDiscountAdditionalChargePerLineItem" asp-items="Model.accuracy_Tolerances" class="form-control custom-select Inputborder">
                        </select>
                    </td>
                </tr>
            </table>
        </form>
        <input asp-for="transadevicecode" value="@Model.deviceId" hidden />

        <input class="form-control" type="file" name="folderName" id="log_path_file" style="display:none; visibility:hidden;" onchange="getlogpathfile(this.value);" />

    </div>
</div>
<script>
    $(function () {
        $("#filtrTransportsSetting").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#Transport_setting_table > tbody > tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>
<script>
    function TreeFunctionproprty() {
        $(document).ready(function () {
            $('.tree-basic').treegrid();

            $('.tree-loadtrans').treegrid({
                source: function (id, response) {
                    if (id != 1) response(['']);
                    else response(['']);
                }
            });

        });
    }
    TreeFunctionproprty();
</script>
<script>
    $('.attributdata').click(function () {
        $(".boderclr").removeClass("boderclr");
        /* var value = $(this).children('.inputfield').val();*/
        var value = $(this).text();
        $("input[name*='" + value + "']").addClass("boderclr");
        $(this).closest("tr").addClass('boderclr');
        $('#deviceproperty').html(value);

    });
    $('.attributcurrvalue').click(function () {
        $(".boderclr").removeClass("boderclr");
        /* var value = $(this).siblings().children('.inputfield').val();*/
        var value = $(this).siblings().text();
        $("input[name*='" + value + "']").addClass("boderclr");
        $(this).siblings().addClass("boderclr");
        $('#deviceproperty').html(value);

    });
    $("#propertysect").change(function () {
        var value = $(this).select2('data')[0].text;
        $(".boderclr").removeClass("boderclr");
        $("input[name*='" + value + "']").addClass('boderclr');
        $("input[name*='" + value + "']").closest("tr").addClass('boderclr');

        $('#deviceproperty').html(value);
    });

</script>
<script>
    $('.Timeoutinput').on('input', function () {
        this.value = this.value.replace(/(?!^-)[^0-9.]/g, "").replace(/(\..*)\./g, '$1');
    });

    $('.accurancyinput').on('input', function () {
        this.value = this.value.replace(/(?!^-)[^0-9.]/g, "").replace(/(\..*)\./g, '$1');
    });
    $('.summerydefinput').on('input', function () {
        this.value = this.value.replace(/(?!^-)[^0-9.]/g, "").replace(/(\..*)\./g, '$1');
    });

</script>
<script>
    function getlogpathfile(filename) {
        $('#display_log_path_file').val(filename);
    }
</script>

